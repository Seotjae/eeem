<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
> 

<!-- 이 XML 이 어떤 interface 와 연결되는지 설정 -->
<mapper namespace="gudi.pro.eeem.dao.MeetDAO">
	<!-- 모임등록 -->
	<insert id="meetRegist" parameterType="meet"  useGeneratedKeys="true" keyProperty="meet_num" keyColumn="meet_num" >
		insert into meeting(mem_id,meet_subject,meet_phone,meet_content,meet_interest,meet_region,meet_gatherStart,meet_gatherEnd,meet_start,meet_end,meet_totalPrs,meet_point,meet_thum,meet_adState)
			values(#{mem_id},#{meet_subject},#{meet_phone},#{meet_content},#{meet_interest},#{meet_region},#{meet_gatherStart},#{meet_gatherEnd},#{meet_start},#{meet_end},#{meet_totalPrs},#{meet_point},#{meet_thum},#{meet_adState})
	</insert>
	
	<!-- 광고등록 -->
	<insert id="adRegist">
		insert into advertisement(meet_num,ad_meetArea) values(#{param1},#{param2})
	</insert>
	
	<!-- 광고삭제 -->
	<delete id="delAdv">
		delete from advertisement where meet_num=#{param1}
	</delete>
	
	<!-- 광고 수 확인 -->
	<select id="adCount" resultType="int">
		select count(ad_num) from  advertisement a left outer join members m on a.ad_meetArea = m.mem_region where m.mem_id =#{param1};
	</select>
	
	
	
	<!-- 사진등록 -->
	<insert id="registPhoto">
		insert into photo(meet_num,photo_oriName,photo_newName) values(#{param1},#{param2},#{param3})
	</insert>
	
	<!-- 스케쥴러 -->
	<update id="updateMeetState">
		update meeting set meet_state=#{param2} where meet_num=#{param1}
	</update>
	
	<select id="chkGthrSt" resultType="int">
		select meet_num from meeting m where m.meet_gatherStart <![CDATA[<=]]> #{param1} and m.meet_gatherEnd <![CDATA[>=]]> #{param1}
			and m.meet_state != 2 and meet_state != 1
	</select>
	
	<select id="chkGthrEd" resultType="int">
		select meet_num from meeting m where m.meet_gatherEnd <![CDATA[<=]]> #{param1} and m.meet_end <![CDATA[>=]]> #{param1} 
			and m.meet_state != 2 and meet_state !=3
	</select>
	
	<select id="chkEd" resultType="int">
		select meet_num from meeting m where date_add(m.meet_end, interval 3 day) <![CDATA[<=]]> #{param1}
			and m.meet_state != 2 and meet_state !=4
	</select>
	
	
	
	<!-- 모임리스트 관련 -->
	
	<select id="meetList" parameterType="gudi.pro.eeem.dto.PageDTO" resultType="gudi.pro.eeem.dto.MeetDTO">	
	select meet_num, meet_region, meet_interest, meet_thum, meet_subject,meet_point,meet_start,meet_end from meeting 
	where 1=1
	
	<if test='meet_interest.size >= 1'>
		and meet_interest in
		<foreach collection="meet_interest" item="arr" open="(" close=")" separator=",">
			<if test="arr == 11">
			0,1,2,3,4,5,6
			</if>
			<if test="arr != 11">
			#{arr}
			</if>
		</foreach>
	</if>
	<if test='meet_region.size >= 1'>
		and meet_region in
		<foreach collection="meet_region" item="arr" open="(" close=")" separator=",">
			<if test="arr == 11">
			0,1,2,3,4,5,6,7
			</if>
			<if test="arr != 11">
			#{arr}
			</if>
		</foreach>
	</if>
	
	<if test='meet_point == 1'>
	  	and meet_point = 0
	</if>
	<if test='meet_point == 2'>
		and meet_point >0
	</if>
	<if test='keyword != null'>
	  	and meet_subject LIKE concat('%', #{keyword}, '%')
	</if>
	
	order by meet_date and meet_start desc 
	</select>
	
	<!--  
	<select id="meetSerchCount" parameterType="gudi.pro.eeem.dto.PageDTO" resultType="gudi.pro.eeem.dto.MeetDTO">
	select meet_thum, meet_subject,meet_point,meet_start,meet_end from meeting
	where 1=1
	
	<if test='meet_interest.size >= 1'>
		and meet_interest in
		<foreach collection="meet_interest" item="arr" open="(" close=")" separator=",">
			<if test="arr == 11">
			0,1,2,3,4,5,6
			</if>
			<if test="arr != 11">
			#{arr}
			</if>
		</foreach>
	</if>
	<if test='meet_region.size >= 1'>
		and meet_region in
		<foreach collection="meet_region" item="arr" open="(" close=")" separator=",">
			<if test="arr == 11">
			0,1,2,3,4,5,6,7
			</if>
			<if test="arr != 11">
			#{arr}
			</if>
		</foreach>
	</if>
	
	<if test='meet_point == 1'>
	  	and meet_point = 0
	</if>
	<if test='meet_point == 2'>
		and meet_point >0
	</if>
	<if test='keyword != null'>
	  	and meet_subject LIKE concat('%', #{keyword}, '%')
	</if>
	order by meet_date and meet_start desc limit #{displayPost}, #{postNum}
	</select>
	-->
	<!--  
	<select id="meetList" parameterType="gudi.pro.eeem.dto.PageDTO" resultType="gudi.pro.eeem.dto.MeetDTO">
      select meet_region, meet_interest, meet_thum, meet_subject,meet_point,meet_start,meet_end from meeting m 
      <where>
         <choose>
            <when test="meet_region.size > 1">
                  meet_region in 
                  <foreach collection="meet_region" item="region" separator="," open="(" close=")">
                  #{region}
                  </foreach>
               </when>
               <when test="meet_interest.size > 1">
                  meet_interest in 
                  <foreach collection="meet_interest" item="interest" separator="," open="(" close=")">
                  #{interest}
                  </foreach>
               </when>
               <when test="!keyword.equals('')">
                 meet_subject like concat('%',#{keyword},'%');
               </when>
               <when test="meet_point !=0">
                  <if test="meet_point == 1">
                     meet_point=0
                  </if>
                  <if test="meet_point == 2">
                     meet_point>0
                  </if>
               </when>
            </choose>
      </where>
   </select>
      -->


 
  <!-- 2022-03-15 유현진 모임 상세보기 -->
         <select id="meetDetail" resultType="gudi.pro.eeem.dto.MeetDTO">
    	 select m.meet_num, m.meet_subject, m.meet_gatherStart, m.meet_gatherEnd, m.meet_start, m.meet_end, m.meet_content, m.meet_totalPrs,
		(select count(app_num) from applicant where meet_num =m.meet_num),
		m.meet_point, m.meet_region, m.meet_interest, m.meet_thum 
		from meeting m where meet_num = #{param1};
    </select>

   <!--2022-03-15 개설자 정보 가져오기 다오에서 이름을 meetDetailWriter 이걸로 가져올거야 가져오는건 해쉬맵으로-->
   <select id="MeetWriter" resultType="gudi.pro.eeem.dto.MeetWriterDTO">
	 select m.mem_id, m2.mem_phone ,m2.mem_email, m2.mem_name,
	(select avg(grd_score) from grade where grd_targetId = m.mem_id and grd_targetType = 1) as grd_score
		from meeting m left outer join members m2 on m.mem_id =m2.mem_id where m.meet_num = #{param1}
    </select>
    
       <!--2022-03-16 유현진 썸네일 불러오기  -->
    <select id="thumList" resultType="gudi.pro.eeem.dto.MeetDTO">
		select meet_thum from meeting where meet_num = #{param1}
   </select>
    
        <!-- 2022-03-16 유현진 모임 상세보기 승인인원 불러오기 -->
     <select id="approvechk" resultType="int">
		select count(app_num) from applicant where meet_num = #{param1} and app_state=1
   </select>
   
   		<!--2022-03-16 유현진 내 포인트 확인 -->
	     <select id="mpointchk" resultType="String">
	     <!-- 포인트에 등록된 사람이 없어서 csj1017 임시아이디 -->
			select sum(pt_count) from point where mem_id = #{mem_id}
   </select>
   
      <!--2022-03-17 유현진-모임신청 클릭시 신청자 테이블에 등록하는 기능 -->
<insert id="meetAppInsert" parameterType="hashmap">
 		insert into applicant(mem_id,meet_num) values(#{mem_id},#{meet_num})
 	</insert>
 	
 	
 	<!-- 2022-03-17 유현진-모임 신청시 알림테이블에 등록 -->
   <insert id="meetNoticeInsert" parameterType="hashmap">
 	insert into notice (mem_id, nts_content, nts_targetNum) values(#{mem_id},0,#{meet_num});
 	</insert>
   
   
   
   
	<!-- ========================개설한 모임 페이징================================================= -->
	<!-- 전체목록수 -->
	<select id="makeAllCount" resultType="int">
		SELECT COUNT(meet_num) FROM meeting WHERE mem_id= #{mem_id}
	</select>
	<!-- 글목록 -->
	<select id="MakeList" resultType="appNmeet">
		select m.meet_subject, m.meet_start, m.meet_end, m.meet_region, m.meet_totalPrs, m.meet_state, m.meet_thum, 
		m.meet_thum, m.meet_num, m.mem_id,
		(select count(a.app_num) from applicant a where a.meet_num=m.meet_num and a.app_state=1) as app_prs,
		(select count(a.app_num) from applicant a where a.meet_num=m.meet_num and a.app_confirm=1) as app_chkprs,
		(select count(g.grd_num) from grade g where g.mem_id = #{param3} AND g.meet_num = m.meet_num) as grd_chk
		from meeting m where mem_id= #{param3}
		ORDER BY m.meet_num DESC
		LIMIT #{param1} OFFSET #{param2}
	</select>
<!--  meet_subject, meet_region, meet_totalPrs, app_state, meet_thum, meet_start, meet_end, meet_state, app_stateOne -->


	<!-- 신청한 모임 전체목록수 -->
	<select id="appAllCount" resultType="int">
		SELECT COUNT(app_num) FROM applicant WHERE mem_id= #{mem_id}
	</select>
	
	<!-- 신청한 모임목록 -->
	<select id="appList" resultType="myPageJoin">
		select a.app_num,m.meet_subject,m.meet_region,m.meet_totalPrs,a.app_state,m.meet_thum,
		m.meet_start,m.meet_end,m.meet_state,m.meet_num,a.app_confirm,
		(select count(a.app_num) from applicant a
		where a.meet_num = m.meet_num and a.app_state=1) as app_stateOne from
		applicant a left outer join meeting m on a.meet_num = m.meet_num where a.mem_id = #{param3} and app_state != 2
		ORDER BY a.app_num DESC
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	
	<!--============== 모임 신청자 목록 페이징 ====================================================== -->
	<!-- 리스트수 -->
	<select id="meetAppAllCount" resultType="int">
		SELECT COUNT(app_num) FROM applicant WHERE meet_num= #{param1} and app_state !=2
		<if test="param2 != 3">
			and app_state = #{param2}
		</if>
	</select>
	
	<!-- 리스트 -->
	<select id="meetAppsCall" resultType="myMeetApp">
		SELECT a.app_num, m.mem_id as app_id, m.mem_name as app_name, m.mem_phone as app_phone, m.mem_birth as app_birth,
		(select avg(grd_score) from grade g where g.grd_targetId=a.mem_id and g.grd_targetType=0) as grd_avg ,a.app_state
		FROM applicant a LEFT OUTER JOIN members m ON a.mem_id = m.mem_id
		WHERE a.meet_num=#{param3} AND a.app_state != 2
		<if test="param4 !=3">
			AND a.app_state=#{param4}
		</if>
		ORDER by a.app_state asc, a.app_num DESC
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<!-- 신청자인원수 -->
	<select id="prsCount" resultType="int">
		select count(app_num) from applicant a1 where a1.meet_num=#{param1} and a1.app_state !=2
		union all
		select count(app_num) from applicant a2 where a2.meet_num=#{param1} and a2.app_state=1 and a2.app_state !=2
		union all
		select count(app_num) from applicant a3 where a3.meet_num=#{param1} and a3.app_state=0 and a3.app_state !=2;
	</select>
	
	<!-- 신청자 승인 요청 -->
	<update id="updAppSt">
		update applicant set app_state = 1 where app_num=#{param1}
	</update>
	
	

	<select id="grdAvg" resultType="String">
		select AVG(g.grd_score) from grade g where g.grd_targetId = #{param1} and grd_targetType=1
	</select>
	
	<update id="makeDel" parameterType="hashmap">
		UPDATE meeting SET meet_state=2 WHERE meet_num = #{param1}
	</update>
	
	<select id="ptReturnId" resultType="String">
		select mem_id from applicant where meet_num = #{param1} and app_state = 1
	</select>
	
	<select id="ptReturnCount" resultType="int">
		select meet_point from meeting where meet_num = #{param1}
	</select>
	

  <!--   2022-03-21 유현진 모임 상세보기  안에있는 글 사진 꺼내오기. + 내용도 가져오기 -->
        <select id="meetDetailBoard" resultType="gudi.pro.eeem.dto.MeetDTO">
		select * from meeting where meet_num = #{param1}
   </select> 
   
    	<!-- 문의상세보기 본문 사진 가져오기 -->
 	    <select id="photoList" resultType="gudi.pro.eeem.dto.PhotoDTO">
		select photo_oriName, photo_newName from photo where meet_num = #{param1} order by photo_num DESC
   </select>
   
         <select id="getId" resultType="String">
		select mem_id from meeting where meet_num = #{param1}
   </select> 
   
         <select id="getNum" resultType="String">
		select meet_num from meeting where meet_num = #{param1}
   </select> 
   
   <select id="getSubject" resultType="String">
		select meet_subject from meeting where meet_num = #{param1}
   </select>    
   
   <!-- 2022-03-21 유현진 모임 상세보기 신고하기 글쓰기 -->
           <insert id="meetSct_regist" parameterType="hashmap">
    	insert into declaration(mem_id, dec_targetId, meet_num , dec_type, dec_targetNum, dec_content)
	values(#{mem_id},#{dec_targetId},#{meet_num},#{dec_type},#{dec_targetNum},#{dec_content})
    </insert>
    
	<!-- 회원 모임완료하기 -->
	<update id="completion">
		update applicant set app_confirm = 1 where meet_num = #{param1} and mem_id = #{param2} and app_state=1
	</update>
	
	<!-- 모임상태 모임완료로변경하기.1 -->
	<select id="meetcompletion" resultType="int">
		select COUNT(mem_id) from applicant WHERE meet_num = #{param1} and app_state = 1
	</select>
	
	<!-- 모임상태 모임완료로변경하기.2 -->
	<select id="meetcompletionTow" resultType="int">
		select COUNT(app_confirm) from applicant WHERE meet_num=#{param1} and app_confirm = 1
	</select>
	
	<!-- 모임상태 모임완료로 바꾸기 -->
	<update id="meetsuccess">
		update meeting set meet_state = 4 where meet_num =#{param1}
	</update>
	
	<!--모임취소 포인트 반환하기 -->
	<insert id="pointreturn"><!--id,포인트내역, 대상 번호,      변경액           변경전        변경후  -->
		insert into point(mem_id,pt_type,pt_targetNum,pt_count,pt_prev,pt_next) 
		values(#{param2},2,#{param1},(select m.meet_point from meeting m WHERE m.meet_num=#{param1}),
		(select sum(p.pt_count) from point p where p.mem_id=#{param2}),
		(select m.meet_point from meeting m WHERE m.meet_num=#{param1})+
		(select sum(p.pt_count) from point p where p.mem_id=#{param2}))
	</insert>
	
	<!-- 모임상태 취소로 요청하기  -->
	<update id="meetStop">
		update applicant set app_state = 2 where meet_num =#{param1} and mem_id = #{param2}
	</update>
	
	
	
	<!-- ========================모임후기 페이징================================================= -->
	<!-- 전체목록수 -->
	<select id="meetReviewCallCount" resultType="int">
		SELECT COUNT(rev_num) FROM review WHERE meet_num= #{param1} and rev_del !=1
	</select>
	<!-- 글목록 -->
	<select id="meetReviewCall" resultType="meetReview">
		SELECT rev_num,meet_num,mem_id,rev_subject,rev_content,rev_date
		FROM review
		WHERE meet_num =#{param3} and rev_del !=1
		ORDER BY rev_num ASC
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<!-- 모임 후기 등록 -->
	<insert id="meetReviewRegist">
		insert into review(meet_num,mem_id,rev_subject,rev_content) values(#{param1},#{param2},#{param3},#{param4});
	</insert>
	
	<!-- 모임에 참석한 사용자인가? -->
	<select id="chkAppYN" resultType="int">
		select count(app_num) from applicant where meet_num=#{param1} and mem_id=#{param2} and app_state=1
	</select>
	
	<!-- 모임 후기를 작성한 사람인가? -->
	<select id="chkReviewYN" resultType="int">
		select count(rev_num) from review where meet_num=#{param1} and mem_id=#{param2} and rev_del != 1
	</select>
	
	<!-- 모임 후기 삭제 -->
	<update id="meetRevDel">
		update review set rev_del=1 where rev_num=#{param1}
	</update>


<!-- 2022-03-21 유현진 모임상세보기 - 모임 문의기능 -->

<!-- 모임 문의(댓글) 등록기능 -->
 	<insert id="meetCommentWrite" parameterType="gudi.pro.eeem.dto.CommentDTO" 
 	useGeneratedKeys="true"
	keyProperty="cmt_num"
	keyColumn="cmt_num">
		insert into comment(meet_num, mem_id, cmt_content, cmt_depth) 
		values(#{meet_num},#{mem_id},#{cmt_content},0);
    </insert>
    
    <update id="meetCommentWriteUpdate">
    	update comment set cmt_superNum=#{param1} where cmt_num=#{param1}
    </update>
    

    <!-- 전체목록수 -->
	<select id="meetCommentCallCount" resultType="int">
		SELECT COUNT(cmt_num) FROM comment WHERE meet_num= #{param1} and cmt_del !=1
	</select>

    <select id="MakeScorePage" resultType="meet">
		select mt.meet_num,mt.mem_id,mt.meet_subject,mt.meet_phone,mt.meet_interest,mt.meet_region,mt.meet_start,
		mt.meet_end,mt.meet_totalPrs,mt.meet_thum,(select mb.mem_name from members mb where mb.mem_id = mt.mem_id) as mem_name
		from meeting mt where mt.meet_num = #{param1}
    </select>

    
    
    <!-- 모임 문의 글 목록(불러오기) -->
    <select id="meetCommentCall" resultType="meetComment">
   SELECT cmt_num,meet_num,mem_id,cmt_content,cmt_date,cmt_depth,cmt_superNum
		FROM comment
		WHERE meet_num =#{param3} and cmt_del !=1
		ORDER BY cmt_superNum,cmt_num
		LIMIT #{param1} OFFSET #{param2}
    </select>
    
    <!-- 대댓글 작성 -->
    <insert id="reCommentWrite" parameterType="hashmap">
    	insert into comment(meet_num, mem_id, cmt_content, cmt_depth,cmt_superNum) 
		values(#{meet_num},#{mem_id},#{cmt_content},1,#{cmt_superNum});
    </insert>
    
    
    <!-- 대댓글 삭제 -->
     <update id="commentDelete">
     UPDATE comment SET
   		cmt_del = 1
   		WHERE cmt_num = #{param2}
   </update>
    
   <!-- 개설자 평가하기 grd_targetType, mem_id,grd_targetId,grd_score,meet_num-->
   <insert id="makeEvaluation">
    insert into grade(grd_targetType,grd_targetId,meet_num,grd_score,mem_id)
    values(1,#{param1},#{param2},#{param3},#{param4})
    </insert>
</mapper>